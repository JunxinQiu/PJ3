
let stationCounter = 0;

const getStationId = () => { stationCounter++; return 'S'+ stationCounter;};

const generateBusStop = (lat,lng) => {
    return {
        id: getStationId(),
        lat,
        lng
    }
}

const generateBusLine = (name, directionList) => {
    return {
        name,
        stations: directionList.map(([x, y]) => generateBusStop(x, y))
    }
}

export const busData = [
    generateBusLine('186路', [[31.158026428626638, 121.38997975184088],
        [31.157409509792643, 121.38079588515166],
        [31.158065371302385, 121.371458776233],
        [31.157994965451906, 121.364433461717],
        [31.156877231429206, 121.35527776388676],
        [31.155801518059288, 121.3500240006033],
        [31.15306369247339, 121.34532093994937],
        [31.148947872383307, 121.32920660267018],
        [31.156198827818564, 121.32552029697104]]),
    generateBusLine('87路', [[31.131576789609234,121.35153154055365],
    [31.134175878890222,121.34981502159985],
    [31.140758011316176,121.34562854966828],
    [31.146558566457372,121.34974936601111],
    [31.149754305730937,121.3524346563272],
    [31.156087806385283,121.3479095760033],
    [31.158912972971567,121.34631728172519],
    [31.1620659906769,121.34668411455164],
    [31.16572812546662,121.35507651764158],
    [31.16764251124985,121.35951126939881]]),
    generateBusLine('763路', [[31.120616460044072,121.37868035518102],
    [31.127571504364585,121.37531504327512],
    [31.12963145911003,121.3740368085605],
    [31.133355365565787,121.37220884421504],
    [31.13785915344047,121.37119774857979],
    [31.14313342400778,121.36716301191802],
    [31.148019495256815,121.36373230340087],
    [31.149651355804036,121.36267149706555],
    [31.153225262065646,121.3603134783026],
    [31.157143763551712,121.35860813155693],
    [31.157787255686188,121.36321391071942],
    [31.158086018240134,121.37141837479885],
    [31.1579480694569,121.37628993358885],
    [31.156994557149382,121.38328634629522]]),
    generateBusLine('776路', [[31.17244268915593,121.35301409031479],
    [31.166344346365346,121.35615511484934],
    [31.167670096247342,121.35946516308195],
    [31.175439106711885,121.37960372998884],
    [31.18273445846995,121.40323482637746]]),
];

console.log(busData);

export const busLineGeometries = busData.map(one => {
    return {
        styleId: "style_blue",
        paths: one.stations.map(({lat, lng}) => new TMap.LatLng(lat, lng)),
    }
})

const stops = busData.flatMap(one => {
    return one.stations;
})


export const junctions = [[31.162323967896725,121.33235933337892],
    [31.158761016853333,121.3343579007169],
    [31.155996074156786,121.33599006486509],
    [31.152632427001116,121.33802194253167],
    [31.150066853155348,121.33958748831083],
    [31.153744153964258,121.3463826209213],
    [31.15488437336358,121.34858104717955],
    [31.156138598894366,121.35094601821606],
    [31.15847597461673,121.34994673530969],
    [31.16240947731564,121.34744852397614],
    [31.164946214676586,121.34604952602592],
    [31.1676108343481,121.34410994519737],
    [31.166698783021893,121.3416783540124],
    [31.164247599695436,121.33681517011678],
    [31.1610552660252,121.33864719148107],
    [31.163677548027465,121.34351037504689],
    [31.16168234015168,121.34484275361115],
    [31.157207221331614,121.34730765334507],
    [31.15589599948918,121.34474282542226],
    [31.154727286800014,121.34251109086938],
    [31.15441361698508,121.34172606494167],
    [31.156878301340473,121.33946949651681]];

export const junctionLabelGeometries = junctions.map(([lat, lng], index) => {
    return {
        'styleId': 'label', //样式id
        'position': new TMap.LatLng(lat, lng), //标注点位置
        'content': '站点' + index, //标注文本
    }
});

export const junctionMarkerGeometries = junctions.map(([lat, lng], index) => {
    return {
        id: index.toString(),
        'styleId': 'junction', //样式id
        'position': new TMap.LatLng(lat, lng), //标注点位置
    }
});

export const junctionWalkable = [
    [1, 13],     //0，verified
    [0, 2, 14],  //1，verified
    [1, 3],      //2
    [2, 4, 20],   //3
    [3, 5],      //4
    [4, 6, 18],  //5
    [5, 7, 17],  //6
    [6, 8],      //7
    [7, 9, 17],  //8
    [8, 10, 16], //9
    [9, 11, 15], //10
    [12, 10],    //11
    [11, 13, 15],//12
    [0, 12, 14], //13
    [1, 13, 15], //14
    [10, 12, 14, 16],//15
    [9, 15, 17], //16
    [6, 8, 16, 18],//17
    [5, 17, 19],//18
    [18, 20],    //19
    [3, 19, 21], //20
    [20] //21
]

export const junctionRoutes = junctionWalkable.flatMap((one, index) => {
    return one.filter(point => point > index).map(point => {
        return {
            styleId: "style_blue",
            paths: [new TMap.LatLng(...junctions[index]), new TMap.LatLng(...junctions[point])],
        }
    })
})

export function calculateDistance (index1 , index2){
    if(junctionWalkable[index1].includes(index2)){
        let x1 = junctions[index1][0];
        let x2 = junctions[index2][0];
        let y1 = junctions[index1][1];
        let y2 = junctions[index2][1];
        let result = Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))*111000;
        return result;
    }else{
        return false;
    }
}
